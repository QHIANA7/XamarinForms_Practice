<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="DPTIS_XamarinF_PR2.Views._20190927.CheckBoxPR_Page"
             Title="CheckBox"
             Padding="10,0">
    <StackLayout>
        <Label Text="CheckBox"
               FontSize="50"
               FontAttributes="Bold"
               HorizontalOptions="Center" />

        <Label Text="Xamarin.Forms의 CheckBox는 선택하거나 비울 수있는 단추 유형입니다. CheckBox에 선택되어있다면 켜져있는 것으로 간주됩니다. CheckBox가 비어 있으면 꺼져있는 것으로 간주됩니다."/>
        <Label Text="CheckBox는 CheckBox가 선택되었는지 여부를 나타내는 IsChecked라는 부울 속성을 정의합니다. 이 속성은 BindableProperty 개체에 의해 지원되므로 스타일을 지정할 수 있고 데이터 바인딩의 대상이 될 수 있습니다."/>
        <Label Text="IsChecked 바인딩 가능 속성의 기본 바인딩 모드는 BindingMode.TwoWay입니다."/>
        <Label Text="CheckBox는 사용자 조작 또는 응용 프로그램이 IsChecked 속성을 설정할 때 IsChecked 속성이 변경 될 때 발생하는 CheckedChanged 이벤트를 정의합니다. 이 이벤트와 함께 제공되는 CheckedChangedEventArgs 개체에는 bool 유형의 Value라는 단일 속성이 있습니다. 이벤트가 발생하면 Value 속성 값이 IsChecked 속성의 새 값으로 설정됩니다."/>
        <Label Text="CheckBox에는 CheckBox가 표시될 때 시각적 변경에 사용할 수 있는 IsChecked VisualState가 있습니다."/>
                
        <CheckBox x:Name="checkbox"
                  HorizontalOptions="Center"
                  VerticalOptions="CenterAndExpand" >
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Color"
                            Value="Red" />
                        </VisualState.Setters>
                    </VisualState>

                    <VisualState x:Name="IsChecked">
                        <VisualState.Setters>
                            <Setter Property="Color"
                            Value="Green" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </CheckBox>

        <Label Text="CheckBox is now False"
               FontSize="Large"
               HorizontalOptions="Center"
               VerticalOptions="CenterAndExpand">
            <Label.Triggers>
                <DataTrigger TargetType="Label"
                             Binding="{Binding Source={x:Reference checkbox},
                                               Path=IsChecked}"
                             Value="True">
                    <Setter Property="Text"
                            Value="CheckBox is now True" />
                </DataTrigger>
            </Label.Triggers>
        </Label>
    </StackLayout>
</ContentPage>