<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="DPTIS_XamarinF_PR2.Views.ScrollViewPR_Page"
             Title="ScrollView">
    <ContentPage.Content>
        <StackLayout>
            <Label Text="ScrollView"
               FontSize="50"
               FontAttributes="Bold"
               HorizontalOptions="Center"/>

            <ScrollView VerticalOptions="FillAndExpand" Margin="10">
                <Label Text=
"페이지 내용이 페이지에 딱 맞을 수 있습니다. 그 땐 매우 편리합니다. 하지만 대부분의 경우에 페이지의 내용이 페이지에 비해 너무 크거나 런타임에서만 사용 가능합니다.
&#10;&#10;이러한 경우, ScrollView가 해결책을 제공합니다. Simply set its
Content property to your content &#x2014; in this
case a Label but in the general case very
likely a Layout derivative with multiple
children &#x2014; and the ScrollView provides
scrolling with the distinctive look and touch
familiar to the user.
&#10;&#10;The ScrollView is also capable of
horizontal scrolling, and while that's
usually not as common as vertical scrolling,
sometimes it comes in handy.
&#10;&#10;Most often, the content of a ScrollView is
a StackLayout. Whenever you're using a
StackLayout with a number of items determined
only at runtime, you should probably put it in
a ScrollView just to be sure your stuff doesn't
go running off the bottom of the screen."

                FontSize="Large"/>
            </ScrollView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>